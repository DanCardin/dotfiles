# vim:fileencoding=utf-8:foldmethod=marker

#: Fonts {{{

#: kitty has very powerful font management. You can configure
#: individual font faces and even specify special fonts for particular
#: characters.

font_family      SauceCodePro Nerd Font
bold_font        auto
italic_font      auto
bold_italic_font auto

font_size 16.0

# force_ltr no

#: kitty does not support BIDI (bidirectional text), however, for RTL
#: scripts, words are automatically displayed in RTL. That is to say,
#: in an RTL script, the words "HELLO WORLD" display in kitty as
#: "WORLD HELLO", and if you try to select a substring of an RTL-
#: shaped string, you will get the character that would be there had
#: the the string been LTR. For example, assuming the Hebrew word
#: ירושלים, selecting the character that on the screen appears to be ם
#: actually writes into the selection buffer the character י.  kitty's
#: default behavior is useful in conjunction with a filter to reverse
#: the word order, however, if you wish to manipulate RTL glyphs, it
#: can be very challenging to work with, so this option is provided to
#: turn it off. Furthermore, this option can be used with the command
#: line program GNU FriBidi
#: <https://github.com/fribidi/fribidi#executable> to get BIDI
#: support, because it will force kitty to always treat the text as
#: LTR, which FriBidi expects for terminals.

# adjust_line_height  0
# adjust_column_width 0

#: Change the size of each character cell kitty renders. You can use
#: either numbers, which are interpreted as pixels or percentages
#: (number followed by %), which are interpreted as percentages of the
#: unmodified values. You can use negative pixels or percentages less
#: than 100% to reduce sizes (but this might cause rendering
#: artifacts).

# adjust_baseline 0

#: Adjust the vertical alignment of text (the height in the cell at
#: which text is positioned). You can use either numbers, which are
#: interpreted as pixels or a percentages (number followed by %),
#: which are interpreted as the percentage of the line height. A
#: positive value moves the baseline up, and a negative value moves
#: them down. The underline and strikethrough positions are adjusted
#: accordingly.

# symbol_map U+E0A0-U+E0A3,U+E0C0-U+E0C7 PowerlineSymbols

#: Map the specified unicode codepoints to a particular font. Useful
#: if you need special rendering for some symbols, such as for
#: Powerline. Avoids the need for patched fonts. Each unicode code
#: point is specified in the form U+<code point in hexadecimal>. You
#: can specify multiple code points, separated by commas and ranges
#: separated by hyphens. symbol_map itself can be specified multiple
#: times. Syntax is::

#:     symbol_map codepoints Font Family Name

# disable_ligatures never

#: Choose how you want to handle multi-character ligatures. The
#: default is to always render them.  You can tell kitty to not render
#: them when the cursor is over them by using cursor to make editing
#: easier, or have kitty never render them at all by using always, if
#: you don't like them. The ligature strategy can be set per-window
#: either using the kitty remote control facility or by defining
#: shortcuts for it in kitty.conf, for example::

#:     map alt+1 disable_ligatures_in active always
#:     map alt+2 disable_ligatures_in all never
#:     map alt+3 disable_ligatures_in tab cursor

#: Note that this refers to programming ligatures, typically
#: implemented using the calt OpenType feature. For disabling general
#: ligatures, use the font_features setting.

# font_features none

#: Choose exactly which OpenType features to enable or disable. This
#: is useful as some fonts might have features worthwhile in a
#: terminal. For example, Fira Code Retina includes a discretionary
#: feature, zero, which in that font changes the appearance of the
#: zero (0), to make it more easily distinguishable from Ø. Fira Code
#: Retina also includes other discretionary features known as
#: Stylistic Sets which have the tags ss01 through ss20.

#: For the exact syntax to use for individual features, see the
#: Harfbuzz documentation <https://harfbuzz.github.io/harfbuzz-hb-
#: common.html#hb-feature-from-string>.

#: Note that this code is indexed by PostScript name, and not the font
#: family. This allows you to define very precise feature settings;
#: e.g. you can disable a feature in the italic font but not in the
#: regular font.

#: On Linux, these are read from the FontConfig database first and
#: then this, setting is applied, so they can be configured in a
#: single, central place.

#: To get the PostScript name for a font, use kitty + list-fonts
#: --psnames:

#: .. code-block:: sh

#:     $ kitty + list-fonts --psnames | grep Fira
#:     Fira Code
#:     Fira Code Bold (FiraCode-Bold)
#:     Fira Code Light (FiraCode-Light)
#:     Fira Code Medium (FiraCode-Medium)
#:     Fira Code Regular (FiraCode-Regular)
#:     Fira Code Retina (FiraCode-Retina)

#: The part in brackets is the PostScript name.

#: Enable alternate zero and oldstyle numerals::

#:     font_features FiraCode-Retina +zero +onum

#: Enable only alternate zero::

#:     font_features FiraCode-Retina +zero

#: Disable the normal ligatures, but keep the calt feature which (in
#: this font) breaks up monotony::

#:     font_features TT2020StyleB-Regular -liga +calt

#: In conjunction with force_ltr, you may want to disable Arabic
#: shaping entirely, and only look at their isolated forms if they
#: show up in a document. You can do this with e.g.::

#:     font_features UnifontMedium +isol -medi -fina -init

# box_drawing_scale 0.001, 1, 1.5, 2

#: Change the sizes of the lines used for the box drawing unicode
#: characters These values are in pts. They will be scaled by the
#: monitor DPI to arrive at a pixel value. There must be four values
#: corresponding to thin, normal, thick, and very thick lines.

#: }}}

#: Cursor customization {{{

# cursor #cccccc

#: Default cursor color

# cursor_text_color #111111

#: Choose the color of text under the cursor. If you want it rendered
#: with the background color of the cell underneath instead, use the
#: special keyword: background

# cursor_shape block

#: The cursor shape can be one of (block, beam, underline). Note that
#: when reloading the config this will be changed only if the cursor
#: shape has not been set by the program running in the terminal.

# cursor_beam_thickness 1.5

#: Defines the thickness of the beam cursor (in pts)

# cursor_underline_thickness 2.0

#: Defines the thickness of the underline cursor (in pts)

# cursor_blink_interval -1

#: The interval (in seconds) at which to blink the cursor. Set to zero
#: to disable blinking. Negative values mean use system default. Note
#: that numbers smaller than repaint_delay will be limited to
#: repaint_delay.

# cursor_stop_blinking_after 15.0

#: Stop blinking cursor after the specified number of seconds of
#: keyboard inactivity.  Set to zero to never stop blinking.

#: }}}

#: Scrollback {{{

# scrollback_lines 2000

#: Number of lines of history to keep in memory for scrolling back.
#: Memory is allocated on demand. Negative numbers are (effectively)
#: infinite scrollback. Note that using very large scrollback is not
#: recommended as it can slow down performance of the terminal and
#: also use large amounts of RAM. Instead, consider using
#: scrollback_pager_history_size. Note that on config reload if this
#: is changed it will only affect newly created windows, not existing
#: ones.

# scrollback_pager less --chop-long-lines --RAW-CONTROL-CHARS +INPUT_LINE_NUMBER

#: Program with which to view scrollback in a new window. The
#: scrollback buffer is passed as STDIN to this program. If you change
#: it, make sure the program you use can handle ANSI escape sequences
#: for colors and text formatting. INPUT_LINE_NUMBER in the command
#: line above will be replaced by an integer representing which line
#: should be at the top of the screen. Similarly CURSOR_LINE and
#: CURSOR_COLUMN will be replaced by the current cursor position.

# scrollback_pager_history_size 0

#: Separate scrollback history size, used only for browsing the
#: scrollback buffer (in MB). This separate buffer is not available
#: for interactive scrolling but will be piped to the pager program
#: when viewing scrollback buffer in a separate window. The current
#: implementation stores the data in UTF-8, so approximatively 10000
#: lines per megabyte at 100 chars per line, for pure ASCII text,
#: unformatted text. A value of zero or less disables this feature.
#: The maximum allowed size is 4GB. Note that on config reload if this
#: is changed it will only affect newly created windows, not existing
#: ones.

# scrollback_fill_enlarged_window no

#: Fill new space with lines from the scrollback buffer after
#: enlarging a window.

# wheel_scroll_multiplier 5.0

#: Modify the amount scrolled by the mouse wheel. Note this is only
#: used for low precision scrolling devices, not for high precision
#: scrolling on platforms such as macOS and Wayland. Use negative
#: numbers to change scroll direction.

# touch_scroll_multiplier 1.0

#: Modify the amount scrolled by a touchpad. Note this is only used
#: for high precision scrolling devices on platforms such as macOS and
#: Wayland. Use negative numbers to change scroll direction.

#: }}}

#: Mouse {{{

# mouse_hide_wait 3.0

#: Hide mouse cursor after the specified number of seconds of the
#: mouse not being used. Set to zero to disable mouse cursor hiding.
#: Set to a negative value to hide the mouse cursor immediately when
#: typing text. Disabled by default on macOS as getting it to work
#: robustly with the ever-changing sea of bugs that is Cocoa is too
#: much effort.

# url_color #0087bd
# url_style curly

#: The color and style for highlighting URLs on mouse-over. url_style
#: can be one of: none, single, double, curly

# open_url_with default

#: The program with which to open URLs that are clicked on. The
#: special value default means to use the operating system's default
#: URL handler.

# url_prefixes http https file ftp gemini irc gopher mailto news git

#: The set of URL prefixes to look for when detecting a URL under the
#: mouse cursor.

# detect_urls yes

#: Detect URLs under the mouse. Detected URLs are highlighted with an
#: underline and the mouse cursor becomes a hand over them. Even if
#: this option is disabled, URLs are still clickable.

# url_excluded_characters 

#: Additional characters to be disallowed from URLs, when detecting
#: URLs under the mouse cursor. By default, all characters legal in
#: URLs are allowed.

# copy_on_select no

#: Copy to clipboard or a private buffer on select. With this set to
#: clipboard, simply selecting text with the mouse will cause the text
#: to be copied to clipboard. Useful on platforms such as macOS that
#: do not have the concept of primary selections. You can instead
#: specify a name such as a1 to copy to a private kitty buffer
#: instead. Map a shortcut with the paste_from_buffer action to paste
#: from this private buffer. For example::

#:     map cmd+shift+v paste_from_buffer a1

#: Note that copying to the clipboard is a security risk, as all
#: programs, including websites open in your browser can read the
#: contents of the system clipboard.

# strip_trailing_spaces never

#: Remove spaces at the end of lines when copying to clipboard. A
#: value of smart will do it when using normal selections, but not
#: rectangle selections. always will always do it.

# select_by_word_characters @-./_~?&=%+#

#: Characters considered part of a word when double clicking. In
#: addition to these characters any character that is marked as an
#: alphanumeric character in the unicode database will be matched.

# click_interval -1.0

#: The interval between successive clicks to detect double/triple
#: clicks (in seconds). Negative numbers will use the system default
#: instead, if available, or fallback to 0.5.

# focus_follows_mouse no

#: Set the active window to the window under the mouse when moving the
#: mouse around

# pointer_shape_when_grabbed arrow

#: The shape of the mouse pointer when the program running in the
#: terminal grabs the mouse. Valid values are: arrow, beam and hand

# default_pointer_shape beam

#: The default shape of the mouse pointer. Valid values are: arrow,
#: beam and hand

# pointer_shape_when_dragging beam

#: The default shape of the mouse pointer when dragging across text.
#: Valid values are: arrow, beam and hand

#: Mouse actions {{{

#: Mouse buttons can be remapped to perform arbitrary actions. The
#: syntax for doing so is:

#: .. code-block:: none

#:     mouse_map button-name event-type modes action

#: Where ``button-name`` is one of ``left``, ``middle``, ``right`` or
#: ``b1 ... b8`` with added keyboard modifiers, for example:
#: ``ctrl+shift+left`` refers to holding the ctrl+shift keys while
#: clicking with the left mouse button. The number ``b1 ... b8`` can
#: be used to refer to upto eight buttons on a mouse.

#: ``event-type`` is one ``press``, ``release``, ``doublepress``,
#: ``triplepress``, ``click`` and ``doubleclick``.  ``modes``
#: indicates whether the action is performed when the mouse is grabbed
#: by the program running in the terminal, or not. It can have one or
#: more or the values, ``grabbed,ungrabbed``. ``grabbed`` refers to
#: when the program running in the terminal has requested mouse
#: events. Note that the click and double click events have a delay of
#: click_interval to disambiguate from double and triple presses.

#: You can run kitty with the kitty --debug-input command line option
#: to see mouse events. See the builtin actions below to get a sense
#: of what is possible.

#: If you want to unmap an action map it to ``no-op``. For example, to
#: disable opening of URLs with a plain click::

#:     mouse_map left click ungrabbed no-op

#: .. note::
#:     Once a selection is started, releasing the button that started it will
#:     automatically end it and no release event will be dispatched.

# clear_all_mouse_actions no

#: You can have kitty remove all mouse actions seen up to this point.
#: Useful, for instance, to remove the default mouse actions.

# mouse_map left            click ungrabbed mouse_click_url_or_select
# mouse_map shift+left      click grabbed,ungrabbed mouse_click_url_or_select
# mouse_map ctrl+shift+left release grabbed,ungrabbed mouse_click_url

#: Variant with ctrl+shift is present because the simple click based
#: version has an unavoidable delay of click_interval, to disambiguate
#: clicks from double clicks.

# mouse_map ctrl+shift+left press grabbed discard_event

#: Prevent this press event from being sent to the program that has
#: grabbed the mouse, as the corresponding release event is used to
#: open a URL.

# mouse_map middle        release ungrabbed paste_from_selection
# mouse_map left          press ungrabbed mouse_selection normal
# mouse_map ctrl+alt+left press ungrabbed mouse_selection rectangle
# mouse_map left          doublepress ungrabbed mouse_selection word
# mouse_map left          triplepress ungrabbed mouse_selection line

#: Select the entire line

# mouse_map ctrl+alt+left triplepress ungrabbed mouse_selection line_from_point

#: Select from the clicked point to the end of the line

# mouse_map right press ungrabbed mouse_selection extend

#: If you want only the end of the selection to be moved instead of
#: the nearest boundary, use move-end instead of extend.

# mouse_map shift+middle        release ungrabbed,grabbed paste_selection
# mouse_map shift+left          press ungrabbed,grabbed mouse_selection normal
# mouse_map shift+ctrl+alt+left press ungrabbed,grabbed mouse_selection rectangle
# mouse_map shift+left          doublepress ungrabbed,grabbed mouse_selection word
# mouse_map shift+left          triplepress ungrabbed,grabbed mouse_selection line

#: Select the entire line

# mouse_map shift+ctrl+alt+left triplepress ungrabbed,grabbed mouse_selection line_from_point

#: Select from the clicked point to the end of the line

# mouse_map shift+right press ungrabbed,grabbed mouse_selection extend
#: }}}

#: }}}

enable_audio_bell no
window_alert_on_bell no

#: Window layout {{{
remember_window_size  yes
hide_window_decorations yes
#: }}}

#: Tab bar {{{
tab_bar_edge top
tab_bar_style powerline
tab_bar_min_tabs 1
tab_switch_strategy previous
tab_title_template "{title}{sup.index}"
#: }}}

#: Color scheme {{{
background_opacity 0.90
dynamic_background_opacity yes
#: }}}

#: }}}

#: Advanced {{{
allow_hyperlinks yes
# term xterm-kitty
macos_titlebar_color system
macos_option_as_alt yes
#: }}}

#: Keyboard shortcuts {{{
kitty_mod cmd
clear_all_shortcuts yes

map kitty_mod+c copy_to_clipboard
map kitty_mod+v paste_from_clipboard
map kitty_mod+o pass_selection_to_program firefox

#: Scrolling {{{
map page_up   scroll_page_up
map page_down scroll_page_down
# map kitty_mod+f         show_scrollback
map kitty_mod+f launch --stdin-source=@screen_scrollback --stdin-add-formatting --type=overlay ~/.nix-profile/bin/bat
map kitty_mod+shift+f launch --type=overlay --stdin-source=@screen_scrollback ~/.local/bin/fzf --no-sort --no-mouse --exact -i --tac
map kitty_mod+g create_marker
map kitty_mod+shift+g remove_marker
#: }}}

#: Window management {{{
map kitty_mod+N new_os_window

# Window Splitting
enabled_layouts splits,stack
map kitty_mod+' launch --location=hsplit --cwd current
map kitty_mod+\ launch --location=vsplit --cwd current
map kitty_mod+z kitten zoom_toggle.py
map ctrl+a>z kitten zoom_toggle.py

# Move the active window in the indicated direction
map kitty_mod+shift+k move_window up
map kitty_mod+shift+h move_window left
map kitty_mod+shift+l move_window right
map kitty_mod+shift+j move_window down

# Switch focus to the neighboring window in the indicated direction
map kitty_mod+k neighboring_window up
map kitty_mod+h neighboring_window left
map kitty_mod+l neighboring_window right
map kitty_mod+j neighboring_window down
map ctrl+k neighboring_window up
map ctrl+h neighboring_window left
map ctrl+l neighboring_window right
map ctrl+j neighboring_window down

# Resize windows
map alt+h resize_window narrower
map alt+j resize_window taller
map alt+k resize_window shorter
map alt+l resize_window wider

#: }}}

#: Tab management {{{
map kitty_mod+n     next_tab
map kitty_mod+p     previous_tab
map kitty_mod+1     goto_tab 1
map kitty_mod+2     goto_tab 2
map kitty_mod+3     goto_tab 3
map kitty_mod+4     goto_tab 4
map kitty_mod+5     goto_tab 5
map kitty_mod+6     goto_tab 6
map kitty_mod+7     goto_tab 7
map kitty_mod+8     goto_tab 8
map kitty_mod+9     goto_tab 9
map kitty_mod+t     new_tab
map kitty_mod+w     close_window
map kitty_mod+shift+w close_tab
map shift+cmd+w     close_os_window
map kitty_mod+.     move_tab_forward
map kitty_mod+,     move_tab_backward
map kitty_mod+alt+t set_tab_title
#: }}}
macos_traditional_fullscreen yes

#: Font sizes {{{
map kitty_mod+equal     change_font_size all +2.0
map kitty_mod+minus     change_font_size all -2.0
map kitty_mod+backspace change_font_size all 0

#: Miscellaneous {{{
map kitty_mod+f11    toggle_fullscreen
map kitty_mod+f10    toggle_maximized
map kitty_mod+f2     edit_config_file
map kitty_mod+escape kitty_shell window

map kitty_mod+r load_config_file
#: }}}

#: Kawanga Colorscheme {{{
background #1F1F28
foreground #DCD7BA
selection_background #2D4F67
selection_foreground #C8C093
url_color #72A7BC
cursor #C8C093

# Tabs
active_tab_background #2D4F67
active_tab_foreground #DCD7BA
inactive_tab_background #223249
inactive_tab_foreground #727169
#tab_bar_background #15161E

# normal
color0 #090618
color1 #C34043
color2 #76946A
color3 #C0A36E
color4 #7E9CD8
color5 #957FB8
color6 #6A9589
color7 #C8C093

# bright
color8  #727169
color9  #E82424
color10 #98BB6C
color11 #E6C384
color12 #7FB4CA
color13 #938AA9
color14 #7AA89F
color15 #DCD7BA


# extended colors
color16 #FFA066
color17 #FF5D62

background #1F1F28
foreground #DCD7BA
selection_background #2D4F67
selection_foreground #C8C093
url_color #72A7BC
cursor #C8C093

# Tabs
active_tab_background #2D4F67
active_tab_foreground #DCD7BA
inactive_tab_background #223249
inactive_tab_foreground #727169
#tab_bar_background #15161E

# normal
color0 #090618
color1 #C34043
color2 #76946A
color3 #C0A36E
color4 #7E9CD8
color5 #957FB8
color6 #6A9589
color7 #C8C093

# bright
color8  #727169
color9  #E82424
color10 #98BB6C
color11 #E6C384
color12 #7FB4CA
color13 #938AA9
color14 #7AA89F
color15 #DCD7BA


# extended colors
color16 #FFA066
color17 #FF5D62
#: }}}
